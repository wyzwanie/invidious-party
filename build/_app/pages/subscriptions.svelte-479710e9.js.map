{"version":3,"file":"subscriptions.svelte-479710e9.js","sources":["../../../../../src/lib/UI/ProgressBar.svelte","../../../../../src/routes/subscriptions.svelte"],"sourcesContent":["<script>\n    export let progress\n    export let total\n</script>\n\n{#if progress < 100}\n    <div class=\"progress-bar container\">\n        <div class=\"progress\" style=\"width: {progress}%\">\n            <span class=\"label\">Processing <b class=\"value\">{Math.floor(progress*total/100)} / {total}</b></span>\n        </div>\n    </div>\n{/if}\n\n<style>\n.progress-bar {\n    margin-top: 3em;\n    margin-bottom: 3em;\n} \n.progress span.label {\n    font-size: 1.2em;\n    position: absolute;\n    right: 0;\n    line-height: 1.4;\n    padding-right: 12px;\n    color: rgba(0,0,0,0.6);\n    text-shadow: rgba(255,255,255, 0.45) 0 1px 0px;\n    white-space: nowrap;\n}\n@keyframes animate-stripes {\n    from {\n        background-position: 0 0;\n    }\n    to {\n        background-position: 2em 0;\n    }\n}      \n.progress-bar {\n    position: relative;\n    height: 1.618em;\n    background-color: #abb2bc;\n    border-radius: 1.618em;\n    -moz-border-radius: 1.618em;\n    -webkit-border-radius: 1.618em;\n    background: #abb2bc;\n}        \n.progress {\n    position: relative;\n    display: block;\n    overflow: hidden;\n    height: 1.618em;\n    -moz-border-radius: 1.618em;\n    -webkit-border-radius: 1.618em;\n    border-radius: 1.618em;\n    background-size: 2em 2em;\n    background-color: var(--accent);\n    animation: animate-stripes 2s linear infinite;\n}\n</style>","<script>\n    import Queue from 'async-await-queue'\n    import { chosen } from '$lib/Stores/memoryStore'\n    import { instances, SUBs, SUBcache, SUBsUpdatedAt, SUBcacheUpdatedAt, SUBsRefreshedAt } from '$lib/Stores/localStore'\n    // import { sortThings } from '$lib/helper'\n\n    import Videos from '$lib/Components/Videos.svelte'\n    import ProgressBar from '$lib/UI/ProgressBar.svelte'\n\n    const CONCURRENCY = 30\n    const INTERVAL = 200\n    let Youtube = $SUBs\n    // [\"UCAmg0HpcIXdIyKSw5aml8HA\",\"UC2-slOJImuSc20Drbf88qvg\",\"UC8Q7XEy86Q7T-3kNpNjYgwA\",\"UCpXwMqnXfJzazKS5fJ8nrVw\",\"UCm22FAXZMw1BaWeFszZxUKw\",\"UCHykVXxOLGdXTvBh82oGCog\",\"UC867Q451mPjjD52peYqpF4A\",\"UCrvz2RsOkUdNA3UCMFmvvnw\",\"UCuNy42Y5egf07cSiHbF23wg\",\"UC__vX0QGDIOQgelZ0rdIOsA\",\"UCvK4bOhULCpmLabd2pDMtnA\",\"UCL_f53ZEJxp8TtlOkHwMV9Q\",\"UC7zlt5O0XQgz851q_ZWwk5g\",\"UCMR_nAMCppEXZiDZ-HLAeJg\",\"UCodkNmk9oWRTIYZdr_HuSlg\",\"UCatDoyZBxEI5ym-Z1R9XZ6g\",\"UC8m_wYdQFOLWIdupJrXnhQg\",\"UCZ3bvy8G3TpURYYASrFsEeA\",\"UCqMVaZM-USi0G54pu5318dQ\",\"UCE_paKcgmlk4piFodH5Wrxg\",\"UCH6E4xDfxBqrkoKdAyVu2dg\",\"UCjI3-FRNbKFvnrG4iDnQCQw\",\"UC9T6tYiK-5OlQ_YBpPhfREQ\",\"UC-WMwOzgFdvvGVLB1EZ-n-w\",\"UC7ucvC0OrD2BQUmEec5NJeg\",\"UCbfYPyITQ-7l4upoX8nvctg\",\"UC2IZ-VjoG467JBCVstD5WPw\",\"UCqVUDbWANEG47KmB2MoM6IA\",\"UCqqKgdUv3BIvs-Y2w7xJBoA\",\"UCM2YmsRUeIbRkqjgNm0eTGQ\",\"UCJ4h7utY-IjXKXOUuwmSYXw\",\"UCptAHlN1gdwD89tFM3ENb6w\",\"UCIRiWCPZoUyZDbydIqitHtQ\",\"UCworsKCR-Sx6R6-BnIjS2MA\",\"UC_ML5xP23TOWKUcc-oAE_Eg\",\"UCOavg1FtdeuyUTLz3wmuIKQ\",\"UCINRrQmprPmC_xMDyFweHXQ\",\"UC_wbVsZY1gbgrVgMbOSMCyA\",\"UChKFnPoA9O2dAMrcNT2aUsQ\",\"UCO7WDNkmzkfg-U_n9ix6aeQ\",\"UCLF2DONV6JCJUs6eK6POaxg\",\"UCAWCSm3nrVjwHBts3RQ38iQ\",\"UC98_050r8lMxngxurJgU1gA\",\"UCiRiQGCHGjDLT9FQXFW0I3A\",\"UCAGTpcuP8o9_sWzvDGfZYKA\",\"UCSQL2gI40u6XULunbjZ02Kw\",\"UC29ju8bIPH5as8OGnQzwJyA\",\"UC4TJ3TENuTpkO6OgqO44TFw\",\"UCZSJEX8QvqdhDQ0WhRjlqkg\",\"UCyUBW72KU30dfAYWLVNZO8Q\",\"UCRatys97ggrXVtQQBGRALkg\",\"UChg4k23shL6Xf0lyA8D4w_w\",\"UC281yIVp-U8Ijg4KUVRgDRA\",\"UCE7b3weKYX_KATV47EVIPHA\",\"UClu2e7S8atp6tG2galK9hgg\",\"UCeqSUA4o9kyaD15VjM__uDg\",\"UCL0u5uz7KZ9q-pe-VC8TY-w\",\"UClgyqJ3ToNoWvO81T9GV07Q\",\"UC4QZ_LsYcvcq7qOsOhpAX4A\",\"UCZ9aMM1v-0HcKS9SYHVekUA\",\"UCu6mSoMNzHQiBIOCkHUa2Aw\",\"UC7FX3mdJ-zPjTMbxv-nCsGg\",\"UCF2_XJffJwfmcAZ-Avmg3fA\",\"UCbbz3_jH582xS93hxszPvjQ\",\"UCmt4OVC6o7WYGI1Cw4aIQQg\",\"UCs9pt6HOHWTZc6Ju6ZofOpQ\",\"UCF49IVUlpV1kZVA14vfivwQ\",\"UCmGVAcHMaM-xmffSNxF2dyA\",\"UCHkkUuVWTSwN82IHIhxq_jg\",\"UCLNgu_OupwoeESgtab33CCw\",\"UCJJOPBQ9KITlzGyxwWxgswg\",\"UCRtyLX-ej-H1PSiaw8g9aIA\",\"UCV5vCi3jPJdURZwAOO_FNfQ\",\"UCrv269YwJzuZL3dH5PCgxUw\",\"UCqwCM44EbcLK5rUeWjBbmiA\",\"UCbx6pClCMGeTTWydbGR9zzA\",\"UCyWDmyZRjrGHeKF-ofFsT5Q\",\"UCho-XTOszUf8vxjy0bm20lA\",\"UC_gSotrFVZ_PiAxo3fTQVuQ\",\"UCvKo-PpKHkbYO2xhKWH6mow\",\"UCnrE7PkiyVPP5ZTMqo3QW-Q\",\"UC0XiDgtbFR8ohoGlstuFgGQ\",\"UCtuqcXfY_wJQzeTKHn67wkw\",\"UC9z7EZAbkphEMg0SP7rw44A\",\"UCxJDH_2HXzwUtT62HgWJqCg\",\"UC_T_YxgUApnjCn3qM-T0-hA\",\"UCVZomfn1f2mugJwd3AW58-g\",\"UCDmyxGV9gw4ZfrL6iVkfiRA\",\"UC4178V769P2ckA65-em0JYQ\",\"UCsCkqoXvLwM1b-FXKovEo8Q\",\"UCGhI9Oy4Le2pY7zuDXU8Mlw\",\"UCfFLQTIFphzroMfsMYjtBcQ\",\"UCiqJJdLFUaWLpTeuNmmJTXA\",\"UCsIlJ9eYylZQcyfMOPNUz9w\",\"UC4_ctkkj65dorWrooMhApeA\",\"UCN4M6rqfhk3NhsJOF3IoTgA\",\"UCb9R0TyctlF9i8PhQ7Ffv9g\",\"UCJu_ihulI-4GNeLYbIyLViw\",\"UCzq1iSqvuXIGeNeUvETfSKQ\",\"UCM_-69pwiy8VGNB6kobm9Mw\",\"UCHkYrJ2Fbe7pBjEZvkFzi3A\",\"UCyjzaMkXTTp9P20UZbxDH6w\",\"UC70G73qumyIXJ57r84JpAHg\",\"UCTS_bRqS7oO4y9gYviOFNYw\",\"UC68GPKqwj-F6acTMYxZb0bA\",\"UC9Wesh1nf7vtrMHNF7DtUog\",\"UCHCOMqChQNT35GezGrd1cvg\",\"UCJx74HaacAjDZk8LPdOfUFQ\",\"UCYdXHOv7srjm-ZsNsTcwbBw\",\"UCrc3XCtBGtWErZUVVvn15jQ\",\"UC6EyGxVgmTGt27_U9c_oz9g\",\"UCUmHIdrEgCRUN1DdmaJmndg\",\"UCb9q9pJVg-FNM6jVEyJfXKQ\",\"UC_wp-1vWJxrB2tzJ3yT618g\",\"UCIVhUjqW-sOZiBUE7Un9Bkw\",\"UCKb8u1n-zGfwIgv1-nyjKNw\",\"UC5fHBGiBdRN5MWMHEGFcZNw\",\"UCgNg3vwj3xt7QOrcIDaHdFg\",\"UCuD1cRmH2Dl0HW-gFQ3Aluw\",\"UCJWCJCWOxBYSi5DhCieLOLQ\",\"UC_voeHE6JFumgTW6juXnQXg\",\"UCAQHQEO4QpI5dXtr3vLoFCg\",\"UCTiL1q9YbrVam5nP2xzFTWQ\",\"UC8HUh8-5afcpHNnrD8-ZOrA\",\"UC8AvcEE8l8mHs-rZTXoynVQ\",\"UCLrI-dOLyDbRnPyUeWadsOg\",\"UCyfXrFVGvMxuLZbslH276fg\",\"UC_m-yurHhUUypqIBgH-w8Bw\",\"UC7pp40MU_6rLK5pvJYG3d0Q\",\"UCR9Gcq0CMm6YgTzsDxAxjOQ\",\"UCBFq0WddUlytySF-RsRXgGA\",\"UC-yewGHQbNFpDrGM0diZOLA\",\"UCrmZwuKSnPtwOVX5Uq4J4NA\",\"UCd0f7Dor1gjTA2Tloepit2A\",\"UC11OPzwn5Wt0-LN3rARunmg\",\"UCPKT_csvP72boVX0XrMtagQ\",\"UC6DicDItkLQ7N4ag1JS5mqg\",\"UC9XF2nKk5rhKptbCmRv1MOg\",\"UCpts-8H1DqUaGmUkFhbXMQQ\",\"UC1X9HTMhyL4UpmjgkrN41oQ\",\"UCMpAklXQxme_wZi3sdHdHVQ\",\"UCVZlxkKqlvVqzRJXhAGq42Q\",\"UCKuphhWsSpVkfOivxdTpupw\",\"UC8q23MpiyWjv9vd4r85oj1A\",\"UCzQUP1qoWDoEbmsQxvdjxgQ\",\"UCJRT8RpG8V7XDOAWgH41hhA\",\"UCxH0sQJKG6Aq9-vFIPnDZ2A\",\"UCi5_jmhcvmj3cyo9JHh6UnA\",\"UCZSr5B0l07JXK2FIeWA0-jw\",\"UCPzFLpOblZEaIx2lpym1l1A\",\"UClb90NQQcskPUGDIXsQEz5Q\",\"UCrT7Pzf3xo52RQ2IN8QrQsA\",\"UC_QywfFAjVkJzLNVBu6lFJw\",\"UCR1D15p_vdP3HkrH8wgjQRw\",\"UCCamVhi5wQkjdnXHJJSjmNw\",\"UCNv0zmezIa_tuN9vUc3_Ziw\",\"UCCeNgCnvIig20KToD_bkS6A\",\"UCx1sDANGlyYQtVcfxp1mt3w\",\"UC-8QAzbLcRglXeN_MY9blyw\",\"UC4uQyE3rm7Ou6MyZmQDvV0w\",\"UCAk3t7WHs2zjsZpopox8Taw\",\"UCwfbruHSdAmxTjv3sn0A_Ow\",\"UCRSSEcNnFKURWw1NZ7DpRCg\",\"UCpCSAcbqs-sjEVfk_hMfY9w\",\"UCRxAgfYexGLlu1WHGIMUDqw\",\"UC4TjXPVIYz9Z13SB3vxKuZQ\",\"UC9yt3wz-6j19RwD5m5f6HSg\",\"UC9K9r4Wh9OO18BZP4KP9vGQ\",\"UCeuZuscpnYmdWj83TvZLdmA\",\"UCW5YeuERMmlnqo4oq8vwUpg\",\"UC9Jqt2iEMVufQUSBX9JwVXQ\",\"UCMdEvelZ3uNkK2ZEmehU7Cg\",\"UCwnKziETDbHJtx78nIkfYug\",\"UC5aqukzSeAj9etVpQpct88A\",\"UChZyTBG-zrTgTnO-tAMNAwA\",\"UCl4l2tOcEw3oNmjcy6zDPjw\",\"UCFSoDSLxgbeHhEzAO8UZqAQ\",\"UCBlAJEg-PKoRoHcyhiAopRg\",\"UCNcfteaeJ_0cphvCRYCanxA\",\"UCyPZmjEThQK5O3JuZfrPdiA\",\"UCXLdDPcQD0BWjb00fGdFFYg\",\"UCh4nQjfLEajxoyxQaHhxP-A\",\"UCD2VuGlPSfBDFGKhxviv1Zg\",\"UCeLFL5kXWuv66Uh9tWJYi2A\",\"UCvBqzzvUBLCs8Y7Axb-jZew\",\"UC4FrvWBLhbOkpgOHj-jz6Ww\",\"UCQHofQeCmh7naz8OBJRVr7A\",\"UCy7Jb0LIMV_hLlUu6ODgJfQ\",\"UCL_mnuQunm9hWkHRULllDmg\",\"UC5g-f-g4EVRkqL8Xs888BLA\"]\n    \n    const SUBque = new Queue(30, 100)\n\n    let toDo = []\n    let failedTasks = []\n    let completedTasks = []\n    let result = []\n    let wynikk = []\n    let done = false\n    let failCount = 0\n    let requestCount = 0\n    let inProgress = 0\n\n    let q\n    let ynstancez = $instances.map(x => x[1].enabled ? x[0] : '')\n    const prepareInstances = instances => {\n        const wynik = {}\n        instances.forEach(x => wynik[x] = [0,0])\n        return wynik\n    }\n    let ynstancezStatus = prepareInstances(ynstancez)\n    const getGudInstance = (instancesFail) => {\n        const wynik = []\n        Object.keys(instancesFail).forEach(key => {\n            const total = instancesFail[key][0] + instancesFail[key][1]\n            const successRatio = total > 0 ? instancesFail[key][1] / total : 0\n            // console.log(successRatio)\n            if(total > 0) {\n                if(instancesFail[key][0] < 10 && instancesFail[key][1] > 0 && key) wynik.push(key)\n            } else wynik.push(key)\n        })\n        const a = wynik[Math.floor(Math.random() * wynik.length)]\n        // console.log('instancja', a, 'fejli', instancesFail[a])\n        return a\n    }\n    \n    const processResult = res => {\n        $SUBsRefreshedAt = new Date().getTime()\n        \n        // const cache = await $ipfs.dag.put(SUBfeed)\n        // $SUBcacheCID = cache\n        let przyciety = res.map(channel => {   \n            return {\n                ...channel, \n                latestVideos: channel.latestVideos.map(video => {\n                    return {\n                        title: video.title,\n                        videoId: video.videoId,\n                        authorId: video.authorId,\n                        author: video.author,\n                        viewCount: video.viewCount,\n                        published: video.published,\n                        publishedText: video.publishedText,\n                        isUpcoming: video.isUpcoming,\n                        lengthSeconds: video.lengthSeconds,\n                        liveNow: video.liveNow,\n                    }\n                })\n            }\n        })\n        let poDatach = []\n        przyciety.forEach(channel => {\n            channel.latestVideos.forEach((video, index) => {\n                if(index < 5) poDatach.push(video)\n            })\n        })\n        \n        wynikk = poDatach.sort((a, b) => b.published - a.published)\n        $SUBcache = wynikk\n    }\n    \n    const fetchSubscriptions = async (tasks, instances) => {\n        toDo = [...tasks]\n        q = []\n        for (let channelID of toDo) {\n            // const instance = Math.random() > 0.5 ? 'yewtu.be' : 'vid.puffyan.us'\n            const me = Symbol()\n            const instance = getGudInstance(instances)\n            q.push(SUBque.wait(me, -1)\n            .then(async () => {\n                \n                // setTimeout(async () => {\n                try {\n                    const controller = new AbortController()\n                    const id = setTimeout(() => controller.abort(), 3000)\n                    inProgress++\n                    requestCount++\n                        const req = await fetch(`https://${instance}/api/v1/channels/${channelID}?fields=authorId,author,latestVideos`, { signal: controller.signal })\n                        const res = await req.json()\n                        clearTimeout(id)\n                        inProgress--\n                        if(res.authorId) {\n                            toDo = toDo.filter(x => x !== res.authorId)\n                            ynstancezStatus[instance][1]++\n                            const exist = result.findIndex(x => x.authorId === res.authorId) > -1\n                            if(!exist) {\n                                result = [...result, res]\n                                processResult(result)\n                            }\n                        }\n                    } catch(err) {\n                        console.log('err', err)\n                        ynstancezStatus[instance][0]++\n                        failCount++\n                        failedTasks = [...failedTasks, channelID]\n                    } finally {\n                        inProgress--\n                        SUBque.end(me)\n                    }\n                // }, 2000)\n            })\n            // .finally(() => SUBque.end(me))\n        )}\n        await Promise.all(q) //SUBque.flush()\n        return done = true\n    }\n\n    let counter = 0\n\n    fetchSubscriptions(Youtube, ynstancezStatus)\n    $: if(done) {\n        counter++\n        done = false\n        failedTasks = failedTasks.filter(x => completedTasks.findIndex(y => y === x) < 0)\n        console.log('--- nextRound ---')\n        // console.log('failedTasks', failedTasks)\n        console.log('result', result)\n        console.log('Youtube', Youtube)\n        console.log('counter', counter)\n        console.log('ynstancezStatus', ynstancezStatus)\n        console.log('--- END nextRound ---')\n        if(toDo.length > 0 && counter < 5) fetchSubscriptions(toDo, ynstancezStatus)\n    }\n    const test = instances => {\n        return instances.map(x => x[0])[Math.floor(Math.random()*instances.length)]\n    }\n</script>\n\n<div>\n    <!-- inProgress   : {inProgress}<br>\n    requestCount : {requestCount}<br>\n    failCount    : {failCount}<br>>\n    <hr>\n    total Tasks      : {Youtube.length}<br>\n    completed Tasks  : {completedTasks.length}<br>\n    done Tasks       : {result.length}<br>\n    failed Tasks     : {failedTasks.length}<br>\n    done?            : {done}\n    <hr>\n    DO POBRANIA: {Youtube.length}\n    <hr> -->\n    <!-- {#each Youtube.sort(sortThings) as x}\n        {x},&nbsp;\n    {/each}\n    <hr> -->\n    <!-- POBRANE: {result.length}\n    <hr> -->\n    <!-- {#each result as x}\n        {x.authorId},&nbsp;\n    {/each}\n    {result.length} -->\n    <!-- <hr>\n    FAILED: {failedTasks.length} -->\n    <!-- <hr>\n    {#each failedTasks.sort(sortThings) as x}\n        {x},&nbsp;\n    {/each} -->\n\n</div>\n<ProgressBar total={Youtube.length} progress={(result.length/Youtube.length)*100} />\n{#if wynikk.length}\n    <Videos chosen={$chosen} videos={wynikk} />\n{/if}"],"names":["Math","floor","ctx","ctx2","progress","total","length","Youtube","$SUBs","SUBque","Queue","q","toDo","failedTasks","completedTasks","result","wynikk","done","ynstancezStatus","wynik","forEach","x","prepareInstances","$instances","map","enabled","getGudInstance","keys","instancesFail","key","push","random","processResult","$SUBsRefreshedAt","Date","getTime","przyciety","res","channel","latestVideos","title","video","videoId","authorId","author","viewCount","published","publishedText","isUpcoming","lengthSeconds","liveNow","poDatach","index","sort","a","b","$SUBcache","fetchSubscriptions","tasks","instances2","channelID","me","Symbol","instance2","wait","then","controller","AbortController","id","setTimeout","abort","req","fetch","signal","json","filter","findIndex","err","log","end","Promise","all","counter","y"],"mappings":"8sBAQ6DA,KAAKC,MAAMC,KAASA,KAAM,uGAASA,0NAAAA,kLADnDA,oJACgBF,KAAKC,MAAME,KAASA,KAAM,0BAASA,uBADnDA,gDAFxCD,KAAW,iGAAXC,KAAW,sIAJDC,YACAC,gOCsLKH,YAAiBA,+GAAjBC,qBAAiBA,oJAFjBD,KAAQI,gBAAmBJ,KAAOI,OAAOJ,KAAQI,OAAQ,aACxEJ,KAAOI,kRADmCH,KAAOG,OAAOH,KAAQG,OAAQ,eACxEH,KAAOG,oYA5KJC,EAAUC,QAGRC,MAAaC,EAAM,GAAI,SAYzBC,EAVAC,KACAC,KACAC,KACAC,KACAC,KACAC,GAAO,MAYPC,EALqB,WACfC,cACIC,YAAaD,EAAME,IAAM,EAAE,KAC9BF,GAEWG,CANNC,EAAWC,QAASH,EAAE,GAAGI,QAAUJ,EAAE,GAAK,YAOpDK,YACIP,YACCQ,KAAKC,GAAeR,mBACjBf,EAAQuB,EAAcC,GAAK,GAAKD,EAAcC,GAAK,KAC5B,GAAID,EAAcC,GAAK,GAEjDxB,EAAQ,EACJuB,EAAcC,GAAK,GAAK,IAAMD,EAAcC,GAAK,GAAK,GAAKA,KAAWC,KAAKD,KACrEC,KAAKD,aAEZV,EAAMnB,KAAKC,MAAMD,KAAK+B,SAAWZ,EAAMb,UAK/C0B,UACFC,OAAuBC,MAAOC,iBAI1BC,EAAYC,EAAIb,yIAETc,MACHC,aAAcD,EAAQC,aAAaf,UAE3BgB,MAAOC,EAAMD,MACbE,QAASD,EAAMC,QACfC,SAAUF,EAAME,SAChBC,OAAQH,EAAMG,OACdC,UAAWJ,EAAMI,UACjBC,UAAWL,EAAMK,UACjBC,cAAeN,EAAMM,cACrBC,WAAYP,EAAMO,WAClBC,cAAeR,EAAMQ,cACrBC,QAAST,EAAMS,kCAK3BC,OACM/B,eACEmB,aAAanB,UAASqB,EAAOW,KAC9BA,EAAQ,KAAYtB,KAAKW,aAIpCzB,EAASmC,EAASE,OAAMC,EAAGC,IAAMA,EAAET,UAAYQ,EAAER,iBACjDU,EAAYxC,MAGVyC,QAA4BC,EAAOC,SACrC/C,MAAW8C,iBAEFE,KAAahD,SAEZiD,EAAKC,SACLC,EAAWrC,EAAeiC,KAC9B7B,KAAKrB,EAAOuD,KAAKH,MAClBI,0BAIaC,MAAiBC,gBACjBC,EAAKC,gBAAiBH,EAAWI,SAAS,aAGtCC,QAAYC,iBAAiBT,qBAA4BH,yCAAmDa,OAAQP,EAAWO,SAC/HpC,QAAYkC,EAAIG,uBACTN,GAEV/B,EAAIM,cACH/B,EAAOA,EAAK+D,WAAYtD,IAAMgB,EAAIM,gBAClCzB,EAAgB6C,GAAU,QACZhD,EAAO6D,cAAevD,EAAEsB,WAAaN,EAAIM,oBAEnD5B,MAAaA,EAAQsB,MACPtB,WAGlB8D,WACIC,IAAI,MAAOD,OACnB3D,EAAgB6C,GAAU,YAE1BlD,MAAkBA,EAAa+C,cAGxBmB,IAAIlB,qBAMrBmB,QAAQC,IAAItE,OACXM,GAAO,QAGdiE,EAAU,WAEK3E,EAASW,oCACtBD,QACFiE,WACAjE,GAAO,OACPJ,EAAcA,EAAY8D,WAAY7D,EAAe8D,cAAeO,IAAM9D,IAAK,aACvEyD,IAAI,6BAEJA,IAAI,SAAU/D,WACd+D,IAAI,UAAWvE,WACfuE,IAAI,UAAWI,WACfJ,IAAI,kBAAmB5D,WACvB4D,IAAI,yBACTlE,EAAKN,OAAS,GAAK4E,EAAU,KAAsBtE,EAAMM"}