{"version":3,"file":"channel.svelte-d7d393ca.js","sources":["../../../../../src/lib/Components/Playlists.svelte","../../../../../src/routes/channel.svelte"],"sourcesContent":["<script>\n    import ImageLoader from '$lib/ImageLoader/ImageLoader.svelte'\n\n    export let chosen\n    export let playlists\n</script>\n\n{#if playlists && playlists.length > 0}\n    <div class=\"playlists\">\n        {#each playlists as playlist}\n            <div class=\"playlist-outer\">\n                <div class=\"playlist-inner\">\n                    <div class=\"card\">\n                        <a class=\"thumbnail\" href=\"/playlist?list={playlist.playlistId}\">\n                            <ImageLoader size=480x360 src={`https://${chosen}/vi/${playlist.playlistThumbnail.split('/vi/')[1]}`} alt={playlist.title} />\n                        </a>\n                        <div class=\"info\">\n                            <h3 class=\"title\"><a href=\"/playlist?list={playlist.playlistId}\">{playlist.title}</a></h3>\n                            <div class=\"count\">{playlist.videoCount} video{playlist.videoCount > 1 ? 's' : ''}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        {/each}\n    </div>\n{:else}\n    No results or an error!\n{/if}\n\n<style>\n.playlists {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n}\n.playlists::after {\n    content: '';\n    width: calc(25% - 0.5em);\n}\n.playlist-outer {\n    width: calc(25% - 0.5em);\n    margin-bottom: 1em;\n}\n@media screen and (max-width: 1366px) {\n   .playlist-outer {\n        width: calc(33% - 0.5em);\n        margin-bottom: 1em;\n    }\n}\n@media screen and (max-width: 1000px) {\n   .playlist-outer {\n        width: calc(50% - 0.5em);\n        margin-bottom: 1em;\n    }\n}\n@media screen and (max-width: 768px) {\n    .playlists {\n        justify-content: center;\n    }\n   .playlist-outer {\n        width: calc(100% - 0.5em);\n        margin-bottom: 1em;\n    }\n}\n.playlist-inner {\n    display: flex;\n    flex-direction: row;\n    background: rgb(0 0 0 / 35%);\n    border-radius: 5px;\n}\n.card {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n}\n.thumbnail {\n    display: flex;\n    justify-content: center;\n    align-content: center;\n}\n:global(.thumbnail img) {\n    width: 100%;\n    flex-grow: 1;\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n}\n.info {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-top: -3px;\n    padding: 7px;\n}\n.title {\n    font-weight: 400;\n    display: flex;\n    align-items: center;\n}\n.count {\n    color: var(--text--80);\n}\n</style>","<script>\n    import { onMount, afterUpdate } from 'svelte'\n\n    import { chooseInstance, convertCount, Fetcher, getAuthorThumbnail, instanceFailedRequest, log, validateChannelID } from '$lib/helper'\n\timport { chosen } from '$lib/Stores/memoryStore'\n    import { instances } from '$lib/Stores/localStore'\n\n    import ImageLoader from '$lib/ImageLoader/ImageLoader.svelte'\n    import AsyncError from '$lib/Components/AsyncError.svelte'\n\timport AsyncLoading from '$lib/Components/AsyncLoading.svelte'\n    import Playlists from '$lib/Components/Playlists.svelte'\n    import Subscribe from '$lib/Components/Subscribe.svelte'\n\timport Videos from '$lib/Components/Videos.svelte'\n\n    let channel\n    let playlists\n    let channelID\n    let isChannelIDvalid\n    let activeTab = 'videos'\n\n    let channelError\n    let playlistError\n    let loadingChannel = false\n    let loadingPlaylst = false\n    let retry = false\n\n    const updateAddress = () => {\n        channelID = window.location.href.split('#')[1]\n        isChannelIDvalid = validateChannelID(channelID)\n    }\n    const handleError = err => {\n        if(fetcher.what === 'videos') {\n            loadingChannel = false\n            channelError = err\n        }\n        if(fetcher.what === 'playlists') {\n            loadingPlaylst = false\n            playlistError = err\n        }\n        const updated = instanceFailedRequest($instances, $chosen)\n        if(updated) $instances = updated\n        retry = true\n    }\n    const getAuthorBanner = authorBanners => {\n        log('channel:getAuthorBanner', authorBanners, 'dev')\n        const link = authorBanners[authorBanners.findIndex(x => x.width == 1060)].url\n        const extracted = link.split('/')[3]\n        return `https://${$chosen}/ggpht/${extracted}`\n    }\n    \n    const fetcher = new Fetcher($chosen, ``)\n\n    fetcher.on('start', url => {\n        if(!url) return\n        if(fetcher.what === 'videos') loadingChannel = true\n        if(fetcher.what === 'playlists') loadingPlaylst = true\n    })\n    fetcher.on('ok', result => {\n        console.log('here?', result)\n        if(fetcher.what === 'videos') {\n            loadingChannel = false\n            channelError = false\n            channel = result\n        }\n        if(fetcher.what === 'playlists') {\n            loadingPlaylst = false\n            playlistError = false\n            playlists = result.playlists\n        }\n    })\n\n    fetcher.on('err', err => handleError(err, fetcher.what))\n    const runFetcher = (instance, channelID, what) => {\n        if(!instance || !isChannelIDvalid || !what) return\n        if(activeTab === 'videos' && channel) return\n        if(activeTab === 'playlists' && playlists) return\n\n        fetcher.what = what\n        fetcher.instance = instance\n        if(fetcher.what === 'videos') fetcher.url = `/channels/${channelID}`\n        if(fetcher.what === 'playlists') fetcher.url = `/channels/${channelID}/playlists`\n        fetcher.go()\n    }\n\n    onMount(() => updateAddress())\n    afterUpdate(() => updateAddress())\n\n    $: runFetcher($chosen, channelID, activeTab)\n\t$: if(retry) {\n        retry = false\n        $chosen = chooseInstance($instances)\n        runFetcher($chosen, channelID, activeTab)\n    }\n</script>\n\n<svelte:window on:hashchange={updateAddress}/>\n\n{#if isChannelIDvalid}\n    <div class=\"wrapper\">\n        {#if loadingChannel}\n            <AsyncLoading chosen={$chosen} />\n        {:else}\n            {#if !channelError}\n                <div class=\"banner\">\n                    {#if channel?.authorBanners?.length}\n                        <ImageLoader src={getAuthorBanner(channel.authorBanners)} size=2560x424 alt={`${channel.author} banner`} />\n                    {:else}\n                        <div class=\"noBanner\">no banner :)</div>\n                    {/if}\n                    <div class=\"info\">\n                        <ImageLoader src={getAuthorThumbnail($chosen, channel.authorThumbnails)} size=100x100 alt={`${channel.author} icon`} />\n                        <span class=\"author\">{channel.author}</span>\n                    </div>\n                    <div class=\"sub\">\n                        <Subscribe {channelID} subCount={convertCount(channel.subCount)} />\n                    </div>\n                </div>\n                <nav>\n                    <ul>\n                        <li on:click={() => activeTab = 'videos'} class=\"videos {activeTab === 'videos' ? 'active' : ''}\">Videos</li>\n                        <li on:click={() => activeTab = 'playlists'} class=\"{activeTab === 'playlists' ? 'active' : ''}\">Playlists</li>\n                        <li on:click={() => activeTab = 'community'} class=\"{activeTab === 'community' ? 'active' : ''}\">Community</li>\n                        <li on:click={() => activeTab = 'info'} class=\"{activeTab === 'info' ? 'active' : ''}\">Info</li>\n                    </ul>\n                </nav>\n                {#if activeTab === 'videos'}\n                    <Videos chosen={$chosen} videos={channel.latestVideos} />\n                {/if}\n                {#if activeTab === 'playlists'}\n                    {#if loadingPlaylst}\n                        <AsyncLoading chosen={$chosen} />\n                    {:else}\n                        {#if !playlistError}\n                            <Playlists chosen={$chosen} {playlists} />\n                        {:else}\n                            <AsyncError error={playlistError} />\n                        {/if}\n                    {/if}\n                {/if}\n                {#if activeTab === 'info'}\n                    <div class=\"description\">\n                        <h3>Channel description:</h3>\n                        {channel.description}\n                        <h3 style=\"margin-top: 0.618em;\">Total view count: <span style=\"font-weight: normal\">{convertCount(channel.totalViews)}</span></h3>\n                    </div>\n                {/if}\n            {:else}\n                <AsyncError error={channelError} />\n            {/if}\n        {/if}\n    </div>\n{:else}\n    ERROR: invalid channelID\n{/if}\n\n<style>\n/* banner */\n.banner {\n    position: relative;\n}\n:global(.banner div img) {\n    width: 100%;\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n    filter: brightness(0.69)\n}\n.noBanner {\n    height: 225px;\n    background: var(--accent-dim);\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n.info {\n    display: flex;\n    align-items: center;\n    position: absolute;\n    bottom: 1em;\n    left: 1em;\n}\n.sub {\n    position: absolute;\n    right: 1em;\n    bottom: 34px;\n    display: flex;\n}\n:global(.info div img) {\n    width: 69px;\n    border-radius: 50%;\n}\n.author {\n    margin-left: 5px;\n    font-size: 1.3em;\n    font-weight: bold;\n}\n/* navigation */\nnav {\n    background: var(--bg-1);\n    width: 100%;\n    margin-top: -3px;\n    margin-bottom: 1em;\n    border-bottom-left-radius: 5px;\n    border-bottom-right-radius: 5px;\n}\nnav ul {\n    list-style: none;\n    display: flex;\n}\nnav ul li {\n    padding: 1em;\n    cursor: pointer;\n}\n.active {\n    color: var(--accent);\n    font-weight: bold;\n    background: var(--bg-2);\n}\n.active.videos {\n    border-bottom-left-radius: 5px;\n}\n.description {\n    background: var(--bg-2);\n    padding: 1em;\n}\nh3 {\n    margin: 0 0 0.618em 0;\n}\n</style>"],"names":["ctx","length","ctx2","title","videoCount","playlistThumbnail","split","playlistId","chosen","playlists","author","authorBanners","getAuthorThumbnail","authorThumbnails","convertCount","subCount","latestVideos","description","totalViews","channel","channelID","isChannelIDvalid","channelError","playlistError","activeTab","loadingChannel","loadingPlaylst","retry","updateAddress","window","location","href","validateChannelID","fetcher","Fetcher","$chosen","on","url","what","log","result","err","updated","instanceFailedRequest","$instances","handleError","runFetcher","instance2","channelID2","instance","go","chooseInstance","extracted","findIndex","x","width"],"mappings":"u4BASeA,0BAALC,yXAAKC,aAALD,qHAAAA,8DAAAA,8KAQoFD,KAASG,WACvDH,KAASI,qBAA2BA,WAAa,EAAI,IAAM,wDAJrCJ,WAAaA,KAASK,kBAAkBC,MAAM,QAAQ,SAAWN,KAASG,guBAD7EH,KAASO,2CAILP,KAASO,kaAHVL,WAAaA,KAASG,kBAAkBC,MAAM,QAAQ,kBAAWJ,KAASC,oDAD7ED,KAASK,8CAIkBL,KAASC,qDAAhCD,KAASK,8CAChCL,KAASE,8CAA2BA,WAAa,EAAI,IAAM,sKAXtGF,MAAaA,KAAUD,OAAS,sVAJtBO,uBACAC,saC+FFP,OAGKA,2cA6CiBF,+GAAAE,4MApCWF,KAAQU,iEAP7B,SAAA,wBAASC,wBAAeV,yDAMPW,EAAmBZ,KAASA,KAAQa,wCAAwCb,KAAQU,yDAIrEI,EAAad,KAAQe,oBAW3C,WAAdf,eAGc,cAAdA,eAWc,SAAdA,2uCApB0E,gBAAW,SAAW,uCAC1B,cAAdA,KAA4B,SAAW,wCACzB,cAAdA,KAA4B,SAAW,yCAC9B,SAAdA,KAAuB,SAAW,soBAZhEY,EAAmBV,KAASA,KAAQW,kCAAwCX,KAAQQ,8CAChFR,KAAQQ,wEAGGI,EAAaZ,KAAQa,kDAKiB,gBAAW,SAAW,4DAC1B,cAAdb,KAA4B,SAAW,8DACzB,cAAdA,KAA4B,SAAW,+DAC9B,SAAdA,KAAuB,SAAW,0CAGvE,WAAdA,0HAGc,cAAdA,0HAWc,SAAdA,0ZAvCaF,+GAAAE,iZAKQF,MAAgBA,KAAQW,sCAAsCX,KAAQU,uHAAtER,MAAgBA,KAAQS,+BAAsCT,KAAQQ,gKAqB5EV,YAAiBA,KAAQgB,uHAAzBd,qBAAiBA,KAAQc,kLAGpCd,OAGKA,oXAGiBF,gHAAAE,sJAFAF,8HAAAE,8KAHDF,+GAAAE,yIAYrBF,KAAQiB,iBAC6EH,EAAad,KAAQkB,stBAD1GhB,KAAQe,oCAC6EH,EAAaZ,KAAQgB,mHA9C9HhB,oIAFyBF,uQAjFtBmB,EACAV,EACAW,EACAC,iDAGAC,EACAC,EAHAC,EAAY,SAIZC,GAAiB,EACjBC,GAAiB,EACjBC,GAAQ,QAENC,WACFR,EAAYS,OAAOC,SAASC,KAAKzB,MAAM,KAAK,QAC5Ce,EAAmBW,EAAkBZ,KAsBnCa,MAAcC,EAAQC,QAEpBC,GAAG,aACHC,IACgB,WAAjBJ,EAAQK,UAAmBb,GAAiB,GAC3B,cAAjBQ,EAAQK,UAAsBZ,GAAiB,SAE9CU,GAAG,kBACCG,IAAI,QAASC,GACD,WAAjBP,EAAQK,WACPb,GAAiB,OACjBH,GAAe,OACfH,EAAUqB,IAEM,cAAjBP,EAAQK,WACPZ,GAAiB,OACjBH,GAAgB,OAChBd,EAAY+B,EAAO/B,iBAInB2B,GAAG,UAzCS,KACI,WAAjBH,EAAQK,WACPb,GAAiB,OACjBH,EAAemB,IAEC,cAAjBR,EAAQK,WACPZ,GAAiB,OACjBH,EAAgBkB,UAEdC,EAAUC,EAAsBC,EAAYT,GAC/CO,OAASE,EAAaF,UACzBf,GAAQ,IA8BakB,CAAYJ,EAAKR,EAAQK,cAC5CQ,GAAcC,EAAUC,EAAWV,KACjCS,GAAa1B,GAAqBiB,IACrB,WAAdd,GAA0BL,GACZ,cAAdK,GAA6Bf,MAExB6B,KAAOA,IACPW,SAAWF,EACC,WAAjBd,EAAQK,SAA2BD,iBAAmBW,KACrC,cAAjBf,EAAQK,SAA8BD,iBAAmBW,iBACpDE,eAGEtB,aACIA,gDAGfD,SACCA,GAAQ,OACRQ,EAAUgB,EAAeP,QACdT,EAASf,EAAWI,oBAJrBW,EAASf,EAAWI,iCA3C1B,0BAA2Bb,EAAe,aAExCyC,EADOzC,EAAcA,EAAc0C,cAA0B,MAAXC,EAAEC,SAAgBlB,IACnD/B,MAAM,KAAK,oBAChB6B,WAAiBiB,iBAwEC5B,EAAY,kBACZA,EAAY,qBACZA,EAAY,qBACZA,EAAY"}