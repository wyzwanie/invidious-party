{"version":3,"file":"popular.svelte-cdcf0f8c.js","sources":["../../../../../src/routes/popular.svelte"],"sourcesContent":["<script>\n    import { chosen } from '$lib/Stores/memoryStore'\n    import { instances } from '$lib/Stores/localStore'\n    import { chooseInstance, Fetcher, instanceFailedRequest, log } from '$lib/helper'\n    \n    import AsyncError from '$lib/Components/AsyncError.svelte'\n\timport AsyncLoading from '$lib/Components/AsyncLoading.svelte'\n\timport Videos from '$lib/Components/Videos.svelte'\n    import Filter from '$lib/UI/Filter.svelte'\n\n    let error\n    let retry = false\n    let popular\n    let loading\n    let searchTerm\n\n    const fetcher = new Fetcher($chosen, `/popular/?fields=type,title,videoId,author,authorId,viewCount,published,lengthSeconds`)\n    fetcher.on('start', () => loading = true)\n    fetcher.on('ok', data => {\n        error = false\n        loading = false\n        popular = data\n    })\n    fetcher.on('err', err => {\n        loading = false\n        error = err\n        log('popular:fetch', err, 'dev')\n        const updated = instanceFailedRequest($instances, $chosen)\n        if(updated) $instances = updated\n        retry = true\n    })\n\n    const runFetcher = instance => {\n        if(!instance || fetcher.running) return\n        fetcher.instance = instance\n        fetcher.go()\n    }\n\n    $: runFetcher($chosen)\n    $: if(retry) {\n        retry = false\n        $chosen = chooseInstance($instances)\n        runFetcher($chosen)\n    }\n\n    const sortOptions = ['default', 'most views', 'least views', 'shortest', 'newest', 'oldest']\n    const searchOptions = ['all', 'title', 'author']\n</script>\n\n<div class=\"wrapper\">\n    <div class=\"filters\">\n        <Filter label=\"Sort by:\" selected=default options={sortOptions} />\n        <Filter label=\"Search by:\" options={searchOptions} placeholder=\"search...\" on:input={e => searchTerm = e.detail} search margin />\n    </div>\n\n    {#if loading}\n        <AsyncLoading chosen={$chosen} />\n    {:else}\n        {#if !error}\n            <Videos videos={popular} chosen={$chosen} />\n        {:else}\n            ERROR: {JSON.stringify(error)}\n        {/if}\n    {/if}\n</div>\n\n<style>\n.filters {\n    display: flex;\n}\n@media (max-width: 600px) {\n    .filters {\n        flex-direction: column;\n    }\n}\n</style>"],"names":["JSON","stringify","ctx","ctx2","error","popular","loading","searchTerm","retry","fetcher","Fetcher","$chosen","on","data","err","updated","instanceFailedRequest","$instances","runFetcher","instance2","running","instance","go","chooseInstance","e","detail"],"mappings":"ojBA6DoBA,KAAKC,UAAUC,wHAAfF,KAAKC,UAAUE,sGAFPD,YAAiBA,+GAAjBC,qBAAiBA,oJAHfD,+GAAAC,gMAL6BD,mDACfA,oHAGnCC,OAGKA,yvBAhDNC,gDAEAC,EACAC,EACAC,EAHAC,GAAQ,QAKNC,MAAcC,EAAQC,6FACpBC,GAAG,iBAAeN,GAAU,OAC5BM,GAAG,cACPR,GAAQ,OACRE,GAAU,OACVD,EAAUQ,QAEND,GAAG,eACPN,GAAU,OACVF,EAAQU,KACJ,gBAAiBA,EAAK,aACpBC,EAAUC,EAAsBC,EAAYN,GAC/CI,OAASE,EAAaF,SACzBP,GAAQ,YAGNU,MACEC,IAAYV,EAAQW,YAChBC,SAAWF,IACXG,+CAINd,QACFA,GAAQ,OACRG,EAAUY,EAAeN,QACdN,oBAJDA,gBAOO,UAAW,aAAc,cAAe,WAAY,SAAU,WAC5D,MAAO,QAAS,qBAMuDJ,EAAaiB,EAAEC"}