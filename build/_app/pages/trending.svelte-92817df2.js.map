{"version":3,"file":"trending.svelte-92817df2.js","sources":["../../../../../src/routes/trending.svelte"],"sourcesContent":["<script>\n    import { chosen } from '$lib/Stores/memoryStore'\n    import { instances } from '$lib/Stores/localStore'\n    import { chooseInstance, Fetcher, instanceFailedRequest, log } from '$lib/helper'\n\n    import countryCodes from '$lib/iso3166countryCodes'\n    \n    import AsyncError from '$lib/Components/AsyncError.svelte'\n\timport AsyncLoading from '$lib/Components/AsyncLoading.svelte'\n\timport Videos from '$lib/Components/Videos.svelte'\n    import Filter from '$lib/UI/Filter.svelte'\n    \n    let error\n    let loading\n    let retry = false\n    \n    let country = 'US'\n    let type = 'Default'\n    let trending\n\n    const fetcher = new Fetcher($chosen, `/trending/?region=${country}&type=${type}&fields=type,title,videoId,author,authorId,viewCount,published,lengthSeconds`)\n    fetcher.on('start', () => loading = true)\n    fetcher.on('ok', data => {\n        error = loading = false\n        trending = data\n    })\n    fetcher.on('err', err => {\n        log('trending:fetch', err, 'dev')\n        loading = false\n        error = err\n        const updated = instanceFailedRequest($instances, $chosen)\n        if(updated) $instances = updated\n        retry = true\n    })\n    \n    const runFetcher = (instance, country, type) => {\n        if(!instance || fetcher.running) return\n        fetcher.instance = instance\n        fetcher.url = `/trending/?region=${country}&type=${type}&fields=type,title,videoId,author,authorId,viewCount,published,lengthSeconds`\n        fetcher.go()\n    }\n\n    $: runFetcher($chosen, country, type)\n    $: if(retry) {\n        retry = false\n        $chosen = chooseInstance($instances)\n        runFetcher($chosen, country, type)\n    }\n\n    const sortOptions = ['default', 'most views', 'least views', 'shortest', 'newest', 'oldest']\n    const typeOptions = ['Default', 'Music', 'Gaming', 'Movies']\n    const srchOptions = ['all', 'title', 'author']\n</script>\n\n<div class=\"wrapper\">\n    <div class=\"filters\">\n        <Filter label=\"Country:\" selected={country} options={countryCodes}  on:change={e => country = e.detail} flex=2 />\n        <Filter label=\"Type:\" selected={type} options={typeOptions}  on:change={e => type = e.detail} margin />\n        <Filter label=\"Sort by:\" selected=default options={sortOptions} margin />\n        <Filter label=\"Search by:\" selected=all options={srchOptions} placeholder=\"search...\" on:input={e => console.log(e)} search margin flex=2 />\n    </div>\n\n    {#if loading}\n        <AsyncLoading chosen={$chosen} />\n    {:else}\n        {#if !error}\n            <Videos videos={trending} chosen={$chosen} />\n        {:else}\n            ERROR: {JSON.stringify(error)}\n        {/if}\n    {/if}\n</div>\n\n<style>\n.filters {\n    display: flex;\n}\n@media (max-width: 600px) {\n    .filters {\n        flex-direction: column;\n    }\n}\n</style>"],"names":["JSON","stringify","ctx","ctx2","countryCodes","error","loading","trending","retry","country","type","fetcher","Fetcher","$chosen","on","data","err","updated","instanceFailedRequest","$instances","runFetcher","instance2","country2","type2","running","instance","url","go","chooseInstance","e","detail","console","log"],"mappings":"6mBAoEoBA,KAAKC,UAAUC,wHAAfF,KAAKC,UAAUE,sGAFPD,YAAkBA,gHAAlBC,qBAAkBA,oJAHhBD,+GAAAC,sLAPaD,aAAkBE,2EACrBF,aAAeA,oGACIA,4EACFA,8HAGhDC,OAGKA,0mBAT6BA,4CACHA,yZA7ChCE,EACAC,iDAKAC,EAJAC,GAAQ,EAERC,EAAU,KACVC,EAAO,gBAGLC,MAAcC,EAAQC,uBAA8BJ,UAAgBC,mFAClEI,GAAG,iBAAeR,GAAU,OAC5BQ,GAAG,cACPT,MAAQC,GAAU,QAClBC,EAAWQ,QAEPD,GAAG,aACH,iBAAkBE,EAAK,WAC3BV,GAAU,OACVD,EAAQW,SACFC,EAAUC,EAAsBC,EAAYN,GAC/CI,OAASE,EAAaF,SACzBT,GAAQ,YAGNY,GAAcC,EAAUC,EAASC,KAC/BF,IAAYV,EAAQa,YAChBC,SAAWJ,IACXK,yBAA2BJ,UAAgBC,kFAC3CI,gDAINnB,QACFA,GAAQ,OACRK,EAAUe,EAAeT,QACdN,EAASJ,EAASC,oBAJnBG,EAASJ,EAASC,kBAOX,UAAW,aAAc,cAAe,WAAY,SAAU,WAC9D,UAAW,QAAS,SAAU,WAC9B,MAAO,QAAS,qBAKmDD,EAAUoB,EAAEC,eACnBpB,EAAOmB,EAAEC,WAEeC,QAAQC,IAAIH"}