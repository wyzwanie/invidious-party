{"version":3,"file":"start-59ef5891.js","sources":["../../../build/generated/root.svelte","../../../../vite/preload-helper","../../../build/generated/manifest.js","../../../build/runtime/internal/start.js","../../../build/runtime/chunks/utils.js"],"sourcesContent":["<!-- This file is generated by @sveltejs/kit â€” do not edit it! -->\n<script>\n\timport { setContext, afterUpdate, onMount } from 'svelte';\n\n\t// stores\n\texport let stores;\n\texport let page;\n\n\texport let components;\n\texport let props_0 = null;\n\texport let props_1 = null;\n\texport let props_2 = null;\n\n\tsetContext('__svelte__', stores);\n\n\t$: stores.page.set(page);\n\tafterUpdate(stores.page.notify);\n\n\tlet mounted = false;\n\tlet navigated = false;\n\tlet title = null;\n\n\tonMount(() => {\n\t\tconst unsubscribe = stores.page.subscribe(() => {\n\t\t\tif (mounted) {\n\t\t\t\tnavigated = true;\n\t\t\t\ttitle = document.title || 'untitled page';\n\t\t\t}\n\t\t});\n\n\t\tmounted = true;\n\t\treturn unsubscribe;\n\t});\n</script>\n\n<svelte:component this={components[0]} {...(props_0 || {})}>\n\t{#if components[1]}\n\t\t<svelte:component this={components[1]} {...(props_1 || {})}>\n\t\t\t{#if components[2]}\n\t\t\t\t<svelte:component this={components[2]} {...(props_2 || {})}/>\n\t\t\t{/if}\n\t\t</svelte:component>\n\t{/if}\n</svelte:component>\n\n{#if mounted}\n\t<div id=\"svelte-announcer\" aria-live=\"assertive\" aria-atomic=\"true\">\n\t\t{#if navigated}\n\t\t\t{title}\n\t\t{/if}\n\t</div>\n{/if}\n\n<style>\n\t#svelte-announcer {\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\ttop: 0;\n\t\tclip: rect(0 0 0 0);\n\t\tclip-path: inset(50%);\n\t\toverflow: hidden;\n\t\twhite-space: nowrap;\n\t\twidth: 1px;\n\t\theight: 1px;\n\t}\n</style>","let scriptRel;const seen = {};export const __vitePreload = function preload(baseModule, deps) {\n    // @ts-ignore\n    if (!__VITE_IS_MODERN__ || !deps) {\n        return baseModule();\n    }\n    // @ts-ignore\n    if (scriptRel === undefined) {\n        // @ts-ignore\n        const relList = document.createElement('link').relList;\n        // @ts-ignore\n        scriptRel =\n            relList && relList.supports && relList.supports('modulepreload')\n                ? 'modulepreload'\n                : 'preload';\n    }\n    return Promise.all(deps.map((dep) => {\n        // @ts-ignore\n        if (dep in seen)\n            return;\n        // @ts-ignore\n        seen[dep] = true;\n        const isCss = dep.endsWith('.css');\n        const cssSelector = isCss ? '[rel=\"stylesheet\"]' : '';\n        // @ts-ignore check if the file is already preloaded by SSR markup\n        if (document.querySelector(`link[href=\"${dep}\"]${cssSelector}`)) {\n            return;\n        }\n        // @ts-ignore\n        const link = document.createElement('link');\n        // @ts-ignore\n        link.rel = isCss ? 'stylesheet' : scriptRel;\n        if (!isCss) {\n            link.as = 'script';\n            link.crossOrigin = '';\n        }\n        link.href = dep;\n        // @ts-ignore\n        document.head.appendChild(link);\n        if (isCss) {\n            return new Promise((res, rej) => {\n                link.addEventListener('load', res);\n                link.addEventListener('error', rej);\n            });\n        }\n    })).then(() => baseModule());\n}","const c = [\n\t() => import(\"../../../src/routes/__layout.svelte\"),\n\t() => import(\"../components/error.svelte\"),\n\t() => import(\"../../../src/routes/index.svelte\"),\n\t() => import(\"../../../src/routes/subscriptions.svelte\"),\n\t() => import(\"../../../src/routes/playlists.svelte\"),\n\t() => import(\"../../../src/routes/playlist.svelte\"),\n\t() => import(\"../../../src/routes/settings.svelte\"),\n\t() => import(\"../../../src/routes/trending.svelte\"),\n\t() => import(\"../../../src/routes/channel.svelte\"),\n\t() => import(\"../../../src/routes/popular.svelte\"),\n\t() => import(\"../../../src/routes/search.svelte\"),\n\t() => import(\"../../../src/routes/thanks.svelte\"),\n\t() => import(\"../../../src/routes/embed.svelte\"),\n\t() => import(\"../../../src/routes/watch.svelte\")\n];\n\nconst d = decodeURIComponent;\n\nexport const routes = [\n\t// src/routes/index.svelte\n\t[/^\\/$/, [c[0], c[2]], [c[1]]],\n\n\t// src/routes/subscriptions.svelte\n\t[/^\\/subscriptions\\/?$/, [c[0], c[3]], [c[1]]],\n\n\t// src/routes/playlists.svelte\n\t[/^\\/playlists\\/?$/, [c[0], c[4]], [c[1]]],\n\n\t// src/routes/playlist.svelte\n\t[/^\\/playlist\\/?$/, [c[0], c[5]], [c[1]]],\n\n\t// src/routes/settings.svelte\n\t[/^\\/settings\\/?$/, [c[0], c[6]], [c[1]]],\n\n\t// src/routes/trending.svelte\n\t[/^\\/trending\\/?$/, [c[0], c[7]], [c[1]]],\n\n\t// src/routes/channel.svelte\n\t[/^\\/channel\\/?$/, [c[0], c[8]], [c[1]]],\n\n\t// src/routes/popular.svelte\n\t[/^\\/popular\\/?$/, [c[0], c[9]], [c[1]]],\n\n\t// src/routes/search.svelte\n\t[/^\\/search\\/?$/, [c[0], c[10]], [c[1]]],\n\n\t// src/routes/thanks.svelte\n\t[/^\\/thanks\\/?$/, [c[0], c[11]], [c[1]]],\n\n\t// src/routes/embed.svelte\n\t[/^\\/embed\\/?$/, [c[0], c[12]], [c[1]]],\n\n\t// src/routes/watch.svelte\n\t[/^\\/watch\\/?$/, [c[0], c[13]], [c[1]]]\n];\n\nexport const fallback = [c[0](), c[1]()];","import Root from '../../generated/root.svelte';\nimport { routes, fallback } from '../../generated/manifest.js';\nimport { g as get_base_uri } from '../chunks/utils.js';\nimport { writable } from 'svelte/store';\nimport { init } from './singletons.js';\nimport { set_paths } from '../paths.js';\n\nfunction scroll_state() {\n\treturn {\n\t\tx: pageXOffset,\n\t\ty: pageYOffset\n\t};\n}\n\n/**\n * @param {Node} node\n * @returns {HTMLAnchorElement | SVGAElement}\n */\nfunction find_anchor(node) {\n\twhile (node && node.nodeName.toUpperCase() !== 'A') node = node.parentNode; // SVG <a> elements have a lowercase name\n\treturn /** @type {HTMLAnchorElement | SVGAElement} */ (node);\n}\n\nclass Router {\n\t/** @param {{\n\t *    base: string;\n\t *    routes: import('types/internal').CSRRoute[];\n\t *    trailing_slash: import('types/internal').TrailingSlash;\n\t * }} opts */\n\tconstructor({ base, routes, trailing_slash }) {\n\t\tthis.base = base;\n\t\tthis.routes = routes;\n\t\tthis.trailing_slash = trailing_slash;\n\t}\n\n\t/** @param {import('./renderer').Renderer} renderer */\n\tinit(renderer) {\n\t\t/** @type {import('./renderer').Renderer} */\n\t\tthis.renderer = renderer;\n\t\trenderer.router = this;\n\n\t\tthis.enabled = true;\n\n\t\tif ('scrollRestoration' in history) {\n\t\t\thistory.scrollRestoration = 'manual';\n\t\t}\n\n\t\t// Adopted from Nuxt.js\n\t\t// Reset scrollRestoration to auto when leaving page, allowing page reload\n\t\t// and back-navigation from other pages to use the browser to restore the\n\t\t// scrolling position.\n\t\taddEventListener('beforeunload', () => {\n\t\t\thistory.scrollRestoration = 'auto';\n\t\t});\n\n\t\t// Setting scrollRestoration to manual again when returning to this page.\n\t\taddEventListener('load', () => {\n\t\t\thistory.scrollRestoration = 'manual';\n\t\t});\n\n\t\t// There's no API to capture the scroll location right before the user\n\t\t// hits the back/forward button, so we listen for scroll events\n\n\t\t/** @type {NodeJS.Timeout} */\n\t\tlet scroll_timer;\n\t\taddEventListener('scroll', () => {\n\t\t\tclearTimeout(scroll_timer);\n\t\t\tscroll_timer = setTimeout(() => {\n\t\t\t\t// Store the scroll location in the history\n\t\t\t\t// This will persist even if we navigate away from the site and come back\n\t\t\t\tconst new_state = {\n\t\t\t\t\t...(history.state || {}),\n\t\t\t\t\t'sveltekit:scroll': scroll_state()\n\t\t\t\t};\n\t\t\t\thistory.replaceState(new_state, document.title, window.location.href);\n\t\t\t}, 50);\n\t\t});\n\n\t\t/** @param {MouseEvent} event */\n\t\tconst trigger_prefetch = (event) => {\n\t\t\tconst a = find_anchor(/** @type {Node} */ (event.target));\n\t\t\tif (a && a.href && a.hasAttribute('sveltekit:prefetch')) {\n\t\t\t\tthis.prefetch(new URL(/** @type {string} */ (a.href)));\n\t\t\t}\n\t\t};\n\n\t\t/** @type {NodeJS.Timeout} */\n\t\tlet mousemove_timeout;\n\n\t\t/** @param {MouseEvent} event */\n\t\tconst handle_mousemove = (event) => {\n\t\t\tclearTimeout(mousemove_timeout);\n\t\t\tmousemove_timeout = setTimeout(() => {\n\t\t\t\ttrigger_prefetch(event);\n\t\t\t}, 20);\n\t\t};\n\n\t\taddEventListener('touchstart', trigger_prefetch);\n\t\taddEventListener('mousemove', handle_mousemove);\n\n\t\t/** @param {MouseEvent} event */\n\t\taddEventListener('click', (event) => {\n\t\t\tif (!this.enabled) return;\n\n\t\t\t// Adapted from https://github.com/visionmedia/page.js\n\t\t\t// MIT license https://github.com/visionmedia/page.js#license\n\t\t\tif (event.button || event.which !== 1) return;\n\t\t\tif (event.metaKey || event.ctrlKey || event.shiftKey || event.altKey) return;\n\t\t\tif (event.defaultPrevented) return;\n\n\t\t\tconst a = find_anchor(/** @type {Node} */ (event.target));\n\t\t\tif (!a) return;\n\n\t\t\tif (!a.href) return;\n\n\t\t\t// check if link is inside an svg\n\t\t\t// in this case, both href and target are always inside an object\n\t\t\tconst svg = typeof a.href === 'object' && a.href.constructor.name === 'SVGAnimatedString';\n\t\t\tconst href = String(svg ? /** @type {SVGAElement} */ (a).href.baseVal : a.href);\n\n\t\t\tif (href === location.href) {\n\t\t\t\tif (!location.hash) event.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Ignore if tag has\n\t\t\t// 1. 'download' attribute\n\t\t\t// 2. 'rel' attribute includes external\n\t\t\tconst rel = a.getAttribute('rel')?.split(/\\s+/);\n\n\t\t\tif (a.hasAttribute('download') || (rel && rel.includes('external'))) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Ignore if <a> has a target\n\t\t\tif (svg ? /** @type {SVGAElement} */ (a).target.baseVal : a.target) return;\n\n\t\t\tconst url = new URL(href);\n\n\t\t\tif (!this.owns(url)) return;\n\n\t\t\tconst noscroll = a.hasAttribute('sveltekit:noscroll');\n\t\t\thistory.pushState({}, '', url.href);\n\t\t\tthis._navigate(url, noscroll ? scroll_state() : null, [], url.hash);\n\t\t\tevent.preventDefault();\n\t\t});\n\n\t\taddEventListener('popstate', (event) => {\n\t\t\tif (event.state && this.enabled) {\n\t\t\t\tconst url = new URL(location.href);\n\t\t\t\tthis._navigate(url, event.state['sveltekit:scroll'], []);\n\t\t\t}\n\t\t});\n\n\t\t// make it possible to reset focus\n\t\tdocument.body.setAttribute('tabindex', '-1');\n\n\t\t// create initial history entry, so we can return here\n\t\thistory.replaceState(history.state || {}, '', location.href);\n\t}\n\n\t/** @param {URL} url */\n\towns(url) {\n\t\treturn url.origin === location.origin && url.pathname.startsWith(this.base);\n\t}\n\n\t/**\n\t * @param {URL} url\n\t * @returns {import('./types').NavigationInfo}\n\t */\n\tparse(url) {\n\t\tif (this.owns(url)) {\n\t\t\tconst path = decodeURIComponent(url.pathname.slice(this.base.length) || '/');\n\n\t\t\tconst routes = this.routes.filter(([pattern]) => pattern.test(path));\n\n\t\t\tconst query = new URLSearchParams(url.search);\n\t\t\tconst id = `${path}?${query}`;\n\n\t\t\treturn { id, routes, path, query };\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} href\n\t * @param {{ noscroll?: boolean, replaceState?: boolean }} opts\n\t * @param {string[]} chain\n\t */\n\tasync goto(href, { noscroll = false, replaceState = false } = {}, chain) {\n\t\tconst url = new URL(href, get_base_uri(document));\n\n\t\tif (this.enabled && this.owns(url)) {\n\t\t\thistory[replaceState ? 'replaceState' : 'pushState']({}, '', href);\n\t\t\treturn this._navigate(url, noscroll ? scroll_state() : null, chain, url.hash);\n\t\t}\n\n\t\tlocation.href = url.href;\n\t\treturn new Promise(() => {\n\t\t\t/* never resolves */\n\t\t});\n\t}\n\n\tenable() {\n\t\tthis.enabled = true;\n\t}\n\n\tdisable() {\n\t\tthis.enabled = false;\n\t}\n\n\t/**\n\t * @param {URL} url\n\t * @returns {Promise<import('./types').NavigationResult>}\n\t */\n\tasync prefetch(url) {\n\t\tconst info = this.parse(url);\n\n\t\tif (!info) {\n\t\t\tthrow new Error('Attempted to prefetch a URL that does not belong to this app');\n\t\t}\n\n\t\treturn this.renderer.load(info);\n\t}\n\n\t/**\n\t * @param {URL} url\n\t * @param {{ x: number, y: number }} scroll\n\t * @param {string[]} chain\n\t * @param {string} [hash]\n\t */\n\tasync _navigate(url, scroll, chain, hash) {\n\t\tconst info = this.parse(url);\n\n\t\tif (!info) {\n\t\t\tthrow new Error('Attempted to navigate to a URL that does not belong to this app');\n\t\t}\n\n\t\t// remove trailing slashes\n\t\tif (info.path !== '/') {\n\t\t\tconst has_trailing_slash = info.path.endsWith('/');\n\n\t\t\tconst incorrect =\n\t\t\t\t(has_trailing_slash && this.trailing_slash === 'never') ||\n\t\t\t\t(!has_trailing_slash &&\n\t\t\t\t\tthis.trailing_slash === 'always' &&\n\t\t\t\t\t!info.path.split('/').pop().includes('.'));\n\n\t\t\tif (incorrect) {\n\t\t\t\tinfo.path = has_trailing_slash ? info.path.slice(0, -1) : info.path + '/';\n\t\t\t\thistory.replaceState({}, '', `${info.path}${location.search}`);\n\t\t\t}\n\t\t}\n\n\t\tthis.renderer.notify({\n\t\t\tpath: info.path,\n\t\t\tquery: info.query\n\t\t});\n\n\t\tawait this.renderer.update(info, chain, false);\n\n\t\tdocument.body.focus();\n\n\t\tconst deep_linked = hash && document.getElementById(hash.slice(1));\n\t\tif (scroll) {\n\t\t\tscrollTo(scroll.x, scroll.y);\n\t\t} else if (deep_linked) {\n\t\t\t// scroll is an element id (from a hash), we need to compute y\n\t\t\tscrollTo(0, deep_linked.getBoundingClientRect().top + scrollY);\n\t\t} else {\n\t\t\tscrollTo(0, 0);\n\t\t}\n\t}\n}\n\n/** @param {string | Uint8Array} value */\nfunction hash(value) {\n\tlet hash = 5381;\n\tlet i = value.length;\n\n\tif (typeof value === 'string') {\n\t\twhile (i) hash = (hash * 33) ^ value.charCodeAt(--i);\n\t} else {\n\t\twhile (i) hash = (hash * 33) ^ value[--i];\n\t}\n\n\treturn (hash >>> 0).toString(36);\n}\n\n/**\n * @param {import('types/page').LoadOutput} loaded\n * @returns {import('types/internal').NormalizedLoadOutput}\n */\nfunction normalize(loaded) {\n\t// TODO should this behaviour be dev-only?\n\n\tif (loaded.error) {\n\t\tconst error = typeof loaded.error === 'string' ? new Error(loaded.error) : loaded.error;\n\t\tconst status = loaded.status;\n\n\t\tif (!(error instanceof Error)) {\n\t\t\treturn {\n\t\t\t\tstatus: 500,\n\t\t\t\terror: new Error(\n\t\t\t\t\t`\"error\" property returned from load() must be a string or instance of Error, received type \"${typeof error}\"`\n\t\t\t\t)\n\t\t\t};\n\t\t}\n\n\t\tif (!status || status < 400 || status > 599) {\n\t\t\tconsole.warn('\"error\" returned from load() without a valid status code â€” defaulting to 500');\n\t\t\treturn { status: 500, error };\n\t\t}\n\n\t\treturn { status, error };\n\t}\n\n\tif (loaded.redirect) {\n\t\tif (!loaded.status || Math.floor(loaded.status / 100) !== 3) {\n\t\t\treturn {\n\t\t\t\tstatus: 500,\n\t\t\t\terror: new Error(\n\t\t\t\t\t'\"redirect\" property returned from load() must be accompanied by a 3xx status code'\n\t\t\t\t)\n\t\t\t};\n\t\t}\n\n\t\tif (typeof loaded.redirect !== 'string') {\n\t\t\treturn {\n\t\t\t\tstatus: 500,\n\t\t\t\terror: new Error('\"redirect\" property returned from load() must be a string')\n\t\t\t};\n\t\t}\n\t}\n\n\treturn /** @type {import('types/internal').NormalizedLoadOutput} */ (loaded);\n}\n\n/** @param {any} value */\nfunction page_store(value) {\n\tconst store = writable(value);\n\tlet ready = true;\n\n\tfunction notify() {\n\t\tready = true;\n\t\tstore.update((val) => val);\n\t}\n\n\t/** @param {any} new_value */\n\tfunction set(new_value) {\n\t\tready = false;\n\t\tstore.set(new_value);\n\t}\n\n\t/** @param {(value: any) => void} run */\n\tfunction subscribe(run) {\n\t\t/** @type {any} */\n\t\tlet old_value;\n\t\treturn store.subscribe((new_value) => {\n\t\t\tif (old_value === undefined || (ready && new_value !== old_value)) {\n\t\t\t\trun((old_value = new_value));\n\t\t\t}\n\t\t});\n\t}\n\n\treturn { notify, set, subscribe };\n}\n\n/**\n * @param {RequestInfo} resource\n * @param {RequestInit} opts\n */\nfunction initial_fetch(resource, opts) {\n\tconst url = typeof resource === 'string' ? resource : resource.url;\n\n\tlet selector = `script[type=\"svelte-data\"][url=\"${url}\"]`;\n\n\tif (opts && typeof opts.body === 'string') {\n\t\tselector += `[body=\"${hash(opts.body)}\"]`;\n\t}\n\n\tconst script = document.querySelector(selector);\n\tif (script) {\n\t\tconst { body, ...init } = JSON.parse(script.textContent);\n\t\treturn Promise.resolve(new Response(body, init));\n\t}\n\n\treturn fetch(resource, opts);\n}\n\n/** @typedef {import('types/internal').CSRComponent} CSRComponent */\n\nclass Renderer {\n\t/** @param {{\n\t *   Root: CSRComponent;\n\t *   fallback: [CSRComponent, CSRComponent];\n\t *   target: Node;\n\t *   session: any;\n\t *   host: string;\n\t * }} opts */\n\tconstructor({ Root, fallback, target, session, host }) {\n\t\tthis.Root = Root;\n\t\tthis.fallback = fallback;\n\t\tthis.host = host;\n\n\t\t/** @type {import('./router').Router} */\n\t\tthis.router = null;\n\n\t\tthis.target = target;\n\n\t\tthis.started = false;\n\n\t\tthis.session_id = 1;\n\t\tthis.invalid = new Set();\n\t\tthis.invalidating = null;\n\n\t\t/** @type {import('./types').NavigationState} */\n\t\tthis.current = {\n\t\t\tpage: null,\n\t\t\tsession_id: null,\n\t\t\tbranch: []\n\t\t};\n\n\t\t/** @type {Map<string, import('./types').NavigationResult>} */\n\t\tthis.cache = new Map();\n\n\t\tthis.loading = {\n\t\t\tid: null,\n\t\t\tpromise: null\n\t\t};\n\n\t\tthis.stores = {\n\t\t\tpage: page_store({}),\n\t\t\tnavigating: writable(null),\n\t\t\tsession: writable(session)\n\t\t};\n\n\t\tthis.$session = null;\n\n\t\tthis.root = null;\n\n\t\tlet ready = false;\n\t\tthis.stores.session.subscribe(async (value) => {\n\t\t\tthis.$session = value;\n\n\t\t\tif (!ready) return;\n\t\t\tthis.session_id += 1;\n\n\t\t\tconst info = this.router.parse(new URL(location.href));\n\t\t\tthis.update(info, [], true);\n\t\t});\n\t\tready = true;\n\t}\n\n\t/**\n\t * @param {{\n\t *   status: number;\n\t *   error: Error;\n\t *   nodes: Array<Promise<CSRComponent>>;\n\t *   page: import('types/page').Page;\n\t * }} selected\n\t */\n\tasync start({ status, error, nodes, page }) {\n\t\t/** @type {import('./types').BranchNode[]} */\n\t\tconst branch = [];\n\n\t\t/** @type {Record<string, any>} */\n\t\tlet context = {};\n\n\t\t/** @type {import('./types').NavigationResult} */\n\t\tlet result;\n\n\t\t/** @type {number} */\n\t\tlet new_status;\n\n\t\t/** @type {Error} new_error */\n\t\tlet new_error;\n\n\t\ttry {\n\t\t\tfor (let i = 0; i < nodes.length; i += 1) {\n\t\t\t\tconst is_leaf = i === nodes.length - 1;\n\n\t\t\t\tconst node = await this._load_node({\n\t\t\t\t\tmodule: await nodes[i],\n\t\t\t\t\tpage,\n\t\t\t\t\tcontext,\n\t\t\t\t\tstatus: is_leaf && status,\n\t\t\t\t\terror: is_leaf && error\n\t\t\t\t});\n\n\t\t\t\tbranch.push(node);\n\n\t\t\t\tif (node && node.loaded) {\n\t\t\t\t\tif (node.loaded.error) {\n\t\t\t\t\t\tif (error) throw node.loaded.error;\n\t\t\t\t\t\tnew_status = node.loaded.status;\n\t\t\t\t\t\tnew_error = node.loaded.error;\n\t\t\t\t\t} else if (node.loaded.context) {\n\t\t\t\t\t\tcontext = {\n\t\t\t\t\t\t\t...context,\n\t\t\t\t\t\t\t...node.loaded.context\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult = await this._get_navigation_result_from_branch({ page, branch });\n\t\t} catch (e) {\n\t\t\tif (error) throw e;\n\n\t\t\tnew_status = 500;\n\t\t\tnew_error = e;\n\t\t}\n\n\t\tif (new_error) {\n\t\t\tresult = await this._load_error({\n\t\t\t\tstatus: new_status,\n\t\t\t\terror: new_error,\n\t\t\t\tpath: page.path,\n\t\t\t\tquery: page.query\n\t\t\t});\n\t\t}\n\n\t\tif (result.redirect) {\n\t\t\t// this is a real edge case â€” `load` would need to return\n\t\t\t// a redirect but only in the browser\n\t\t\tlocation.href = new URL(result.redirect, location.href).href;\n\t\t\treturn;\n\t\t}\n\n\t\tthis._init(result);\n\t}\n\n\t/** @param {{ path: string, query: URLSearchParams }} destination */\n\tnotify({ path, query }) {\n\t\tdispatchEvent(new CustomEvent('sveltekit:navigation-start'));\n\n\t\tif (this.started) {\n\t\t\tthis.stores.navigating.set({\n\t\t\t\tfrom: {\n\t\t\t\t\tpath: this.current.page.path,\n\t\t\t\t\tquery: this.current.page.query\n\t\t\t\t},\n\t\t\t\tto: {\n\t\t\t\t\tpath,\n\t\t\t\t\tquery\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./types').NavigationInfo} info\n\t * @param {string[]} chain\n\t * @param {boolean} no_cache\n\t */\n\tasync update(info, chain, no_cache) {\n\t\tconst token = (this.token = {});\n\t\tlet navigation_result = await this._get_navigation_result(info, no_cache);\n\n\t\t// abort if user navigated during update\n\t\tif (token !== this.token) return;\n\n\t\tthis.invalid.clear();\n\n\t\tif (navigation_result.redirect) {\n\t\t\tif (chain.length > 10 || chain.includes(info.path)) {\n\t\t\t\tnavigation_result = await this._load_error({\n\t\t\t\t\tstatus: 500,\n\t\t\t\t\terror: new Error('Redirect loop'),\n\t\t\t\t\tpath: info.path,\n\t\t\t\t\tquery: info.query\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif (this.router) {\n\t\t\t\t\tthis.router.goto(navigation_result.redirect, { replaceState: true }, [\n\t\t\t\t\t\t...chain,\n\t\t\t\t\t\tinfo.path\n\t\t\t\t\t]);\n\t\t\t\t} else {\n\t\t\t\t\tlocation.href = new URL(navigation_result.redirect, location.href).href;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (navigation_result.reload) {\n\t\t\tlocation.reload();\n\t\t} else if (this.started) {\n\t\t\tthis.current = navigation_result.state;\n\n\t\t\tthis.root.$set(navigation_result.props);\n\t\t\tthis.stores.navigating.set(null);\n\n\t\t\tawait 0;\n\t\t} else {\n\t\t\tthis._init(navigation_result);\n\t\t}\n\n\t\tdispatchEvent(new CustomEvent('sveltekit:navigation-end'));\n\t\tthis.loading.promise = null;\n\t\tthis.loading.id = null;\n\n\t\tconst leaf_node = navigation_result.state.branch[navigation_result.state.branch.length - 1];\n\t\tif (leaf_node && leaf_node.module.router === false) {\n\t\t\tthis.router.disable();\n\t\t} else {\n\t\t\tthis.router.enable();\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./types').NavigationInfo} info\n\t * @returns {Promise<import('./types').NavigationResult>}\n\t */\n\tload(info) {\n\t\tthis.loading.promise = this._get_navigation_result(info, false);\n\t\tthis.loading.id = info.id;\n\n\t\treturn this.loading.promise;\n\t}\n\n\t/** @param {string} href */\n\tinvalidate(href) {\n\t\tthis.invalid.add(href);\n\n\t\tif (!this.invalidating) {\n\t\t\tthis.invalidating = Promise.resolve().then(async () => {\n\t\t\t\tconst info = this.router.parse(new URL(location.href));\n\t\t\t\tawait this.update(info, [], true);\n\n\t\t\t\tthis.invalidating = null;\n\t\t\t});\n\t\t}\n\n\t\treturn this.invalidating;\n\t}\n\n\t/** @param {import('./types').NavigationResult} result */\n\t_init(result) {\n\t\tthis.current = result.state;\n\n\t\tconst style = document.querySelector('style[data-svelte]');\n\t\tif (style) style.remove();\n\n\t\tthis.root = new this.Root({\n\t\t\ttarget: this.target,\n\t\t\tprops: {\n\t\t\t\tstores: this.stores,\n\t\t\t\t...result.props\n\t\t\t},\n\t\t\thydrate: true\n\t\t});\n\n\t\tthis.started = true;\n\t}\n\n\t/**\n\t * @param {import('./types').NavigationInfo} info\n\t * @param {boolean} no_cache\n\t * @returns {Promise<import('./types').NavigationResult>}\n\t */\n\tasync _get_navigation_result(info, no_cache) {\n\t\tif (this.loading.id === info.id) {\n\t\t\treturn this.loading.promise;\n\t\t}\n\n\t\tfor (let i = 0; i < info.routes.length; i += 1) {\n\t\t\tconst route = info.routes[i];\n\n\t\t\tif (route.length === 1) {\n\t\t\t\treturn { reload: true };\n\t\t\t}\n\n\t\t\t// load code for subsequent routes immediately, if they are as\n\t\t\t// likely to match the current path/query as the current one\n\t\t\tlet j = i + 1;\n\t\t\twhile (j < info.routes.length) {\n\t\t\t\tconst next = info.routes[j];\n\t\t\t\tif (next[0].toString() === route[0].toString()) {\n\t\t\t\t\tif (next.length !== 1) next[1].forEach((loader) => loader());\n\t\t\t\t\tj += 1;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst result = await this._load(\n\t\t\t\t{\n\t\t\t\t\troute,\n\t\t\t\t\tpath: info.path,\n\t\t\t\t\tquery: info.query\n\t\t\t\t},\n\t\t\t\tno_cache\n\t\t\t);\n\t\t\tif (result) return result;\n\t\t}\n\n\t\treturn await this._load_error({\n\t\t\tstatus: 404,\n\t\t\terror: new Error(`Not found: ${info.path}`),\n\t\t\tpath: info.path,\n\t\t\tquery: info.query\n\t\t});\n\t}\n\n\t/**\n\t *\n\t * @param {{\n\t *   page: import('types/page').Page;\n\t *   branch: import('./types').BranchNode[]\n\t * }} opts\n\t */\n\tasync _get_navigation_result_from_branch({ page, branch }) {\n\t\tconst filtered = branch.filter(Boolean);\n\n\t\t/** @type {import('./types').NavigationResult} */\n\t\tconst result = {\n\t\t\tstate: {\n\t\t\t\tpage,\n\t\t\t\tbranch,\n\t\t\t\tsession_id: this.session_id\n\t\t\t},\n\t\t\tprops: {\n\t\t\t\tcomponents: filtered.map((node) => node.module.default)\n\t\t\t}\n\t\t};\n\n\t\tfor (let i = 0; i < filtered.length; i += 1) {\n\t\t\tif (filtered[i].loaded) result.props[`props_${i}`] = await filtered[i].loaded.props;\n\t\t}\n\n\t\tif (\n\t\t\t!this.current.page ||\n\t\t\tpage.path !== this.current.page.path ||\n\t\t\tpage.query.toString() !== this.current.page.query.toString()\n\t\t) {\n\t\t\tresult.props.page = page;\n\t\t}\n\n\t\tconst leaf = filtered[filtered.length - 1];\n\t\tconst maxage = leaf.loaded && leaf.loaded.maxage;\n\n\t\tif (maxage) {\n\t\t\tconst key = `${page.path}?${page.query}`;\n\t\t\tlet ready = false;\n\n\t\t\tconst clear = () => {\n\t\t\t\tif (this.cache.get(key) === result) {\n\t\t\t\t\tthis.cache.delete(key);\n\t\t\t\t}\n\n\t\t\t\tunsubscribe();\n\t\t\t\tclearTimeout(timeout);\n\t\t\t};\n\n\t\t\tconst timeout = setTimeout(clear, maxage * 1000);\n\n\t\t\tconst unsubscribe = this.stores.session.subscribe(() => {\n\t\t\t\tif (ready) clear();\n\t\t\t});\n\n\t\t\tready = true;\n\n\t\t\tthis.cache.set(key, result);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t *\n\t * @param {{\n\t *   status?: number;\n\t *   error?: Error;\n\t *   module: CSRComponent;\n\t *   page: import('types/page').Page;\n\t *   context: Record<string, any>;\n\t * }} options\n\t * @returns\n\t */\n\tasync _load_node({ status, error, module, page, context }) {\n\t\t/** @type {import('./types').BranchNode} */\n\t\tconst node = {\n\t\t\tmodule,\n\t\t\tuses: {\n\t\t\t\tparams: new Set(),\n\t\t\t\tpath: false,\n\t\t\t\tquery: false,\n\t\t\t\tsession: false,\n\t\t\t\tcontext: false,\n\t\t\t\tdependencies: []\n\t\t\t},\n\t\t\tloaded: null,\n\t\t\tcontext\n\t\t};\n\n\t\t/** @type {Record<string, string>} */\n\t\tconst params = {};\n\t\tfor (const key in page.params) {\n\t\t\tObject.defineProperty(params, key, {\n\t\t\t\tget() {\n\t\t\t\t\tnode.uses.params.add(key);\n\t\t\t\t\treturn page.params[key];\n\t\t\t\t},\n\t\t\t\tenumerable: true\n\t\t\t});\n\t\t}\n\n\t\tconst session = this.$session;\n\n\t\tif (module.load) {\n\t\t\tconst { started } = this;\n\n\t\t\t/** @type {import('types/page').LoadInput | import('types/page').ErrorLoadInput} */\n\t\t\tconst load_input = {\n\t\t\t\tpage: {\n\t\t\t\t\thost: page.host,\n\t\t\t\t\tparams,\n\t\t\t\t\tget path() {\n\t\t\t\t\t\tnode.uses.path = true;\n\t\t\t\t\t\treturn page.path;\n\t\t\t\t\t},\n\t\t\t\t\tget query() {\n\t\t\t\t\t\tnode.uses.query = true;\n\t\t\t\t\t\treturn page.query;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tget session() {\n\t\t\t\t\tnode.uses.session = true;\n\t\t\t\t\treturn session;\n\t\t\t\t},\n\t\t\t\tget context() {\n\t\t\t\t\tnode.uses.context = true;\n\t\t\t\t\treturn { ...context };\n\t\t\t\t},\n\t\t\t\tfetch(resource, info) {\n\t\t\t\t\tconst url = typeof resource === 'string' ? resource : resource.url;\n\t\t\t\t\tconst { href } = new URL(url, new URL(page.path, document.baseURI));\n\t\t\t\t\tnode.uses.dependencies.push(href);\n\n\t\t\t\t\treturn started ? fetch(resource, info) : initial_fetch(resource, info);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (error) {\n\t\t\t\t/** @type {import('types/page').ErrorLoadInput} */ (load_input).status = status;\n\t\t\t\t/** @type {import('types/page').ErrorLoadInput} */ (load_input).error = error;\n\t\t\t}\n\n\t\t\tconst loaded = await module.load.call(null, load_input);\n\n\t\t\t// if the page component returns nothing from load, fall through\n\t\t\tif (!loaded) return;\n\n\t\t\tnode.loaded = normalize(loaded);\n\t\t\tif (node.loaded.context) node.context = node.loaded.context;\n\t\t}\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * @param {import('./types').NavigationCandidate} selected\n\t * @param {boolean} no_cache\n\t * @returns {Promise<import('./types').NavigationResult>}\n\t */\n\tasync _load({ route, path, query }, no_cache) {\n\t\tconst key = `${path}?${query}`;\n\n\t\tif (!no_cache && this.cache.has(key)) {\n\t\t\treturn this.cache.get(key);\n\t\t}\n\n\t\tconst [pattern, a, b, get_params] = route;\n\t\tconst params = get_params ? get_params(pattern.exec(path)) : {};\n\n\t\tconst changed = this.current.page && {\n\t\t\tpath: path !== this.current.page.path,\n\t\t\tparams: Object.keys(params).filter((key) => this.current.page.params[key] !== params[key]),\n\t\t\tquery: query.toString() !== this.current.page.query.toString(),\n\t\t\tsession: this.session_id !== this.current.session_id\n\t\t};\n\n\t\t/** @type {import('types/page').Page} */\n\t\tconst page = { host: this.host, path, query, params };\n\n\t\t/** @type {import('./types').BranchNode[]} */\n\t\tconst branch = [];\n\n\t\t/** @type {Record<string, any>} */\n\t\tlet context = {};\n\t\tlet context_changed = false;\n\n\t\t/** @type {number} */\n\t\tlet status = 200;\n\n\t\t/** @type {Error} */\n\t\tlet error = null;\n\n\t\t// preload modules\n\t\ta.forEach((loader) => loader());\n\n\t\tload: for (let i = 0; i < a.length; i += 1) {\n\t\t\t/** @type {import('./types').BranchNode} */\n\t\t\tlet node;\n\n\t\t\ttry {\n\t\t\t\tif (!a[i]) continue;\n\n\t\t\t\tconst module = await a[i]();\n\t\t\t\tconst previous = this.current.branch[i];\n\n\t\t\t\tconst changed_since_last_render =\n\t\t\t\t\t!previous ||\n\t\t\t\t\tmodule !== previous.module ||\n\t\t\t\t\t(changed.path && previous.uses.path) ||\n\t\t\t\t\tchanged.params.some((param) => previous.uses.params.has(param)) ||\n\t\t\t\t\t(changed.query && previous.uses.query) ||\n\t\t\t\t\t(changed.session && previous.uses.session) ||\n\t\t\t\t\tprevious.uses.dependencies.some((dep) => this.invalid.has(dep)) ||\n\t\t\t\t\t(context_changed && previous.uses.context);\n\n\t\t\t\tif (changed_since_last_render) {\n\t\t\t\t\tnode = await this._load_node({\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\tpage,\n\t\t\t\t\t\tcontext\n\t\t\t\t\t});\n\n\t\t\t\t\tconst is_leaf = i === a.length - 1;\n\n\t\t\t\t\tif (node && node.loaded) {\n\t\t\t\t\t\tif (node.loaded.error) {\n\t\t\t\t\t\t\tstatus = node.loaded.status;\n\t\t\t\t\t\t\terror = node.loaded.error;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (node.loaded.redirect) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tredirect: node.loaded.redirect\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (node.loaded.context) {\n\t\t\t\t\t\t\tcontext_changed = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (is_leaf && module.load) {\n\t\t\t\t\t\t// if the leaf node has a `load` function\n\t\t\t\t\t\t// that returns nothing, fall through\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tnode = previous;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tstatus = 500;\n\t\t\t\terror = e;\n\t\t\t}\n\n\t\t\tif (error) {\n\t\t\t\twhile (i--) {\n\t\t\t\t\tif (b[i]) {\n\t\t\t\t\t\tlet error_loaded;\n\n\t\t\t\t\t\t/** @type {import('./types').BranchNode} */\n\t\t\t\t\t\tlet node_loaded;\n\t\t\t\t\t\tlet j = i;\n\t\t\t\t\t\twhile (!(node_loaded = branch[j])) {\n\t\t\t\t\t\t\tj -= 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\terror_loaded = await this._load_node({\n\t\t\t\t\t\t\t\tstatus,\n\t\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t\t\tmodule: await b[i](),\n\t\t\t\t\t\t\t\tpage,\n\t\t\t\t\t\t\t\tcontext: node_loaded.context\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tif (error_loaded.loaded.error) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbranch.push(error_loaded);\n\t\t\t\t\t\t\tbreak load;\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn await this._load_error({\n\t\t\t\t\tstatus,\n\t\t\t\t\terror,\n\t\t\t\t\tpath,\n\t\t\t\t\tquery\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif (node && node.loaded && node.loaded.context) {\n\t\t\t\t\tcontext = {\n\t\t\t\t\t\t...context,\n\t\t\t\t\t\t...node.loaded.context\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tbranch.push(node);\n\t\t\t}\n\t\t}\n\n\t\treturn await this._get_navigation_result_from_branch({ page, branch });\n\t}\n\n\t/**\n\t * @param {{\n\t *   status: number;\n\t *   error: Error;\n\t *   path: string;\n\t *   query: URLSearchParams\n\t * }} opts\n\t */\n\tasync _load_error({ status, error, path, query }) {\n\t\tconst page = {\n\t\t\thost: this.host,\n\t\t\tpath,\n\t\t\tquery,\n\t\t\tparams: {}\n\t\t};\n\n\t\tconst node = await this._load_node({\n\t\t\tmodule: await this.fallback[0],\n\t\t\tpage,\n\t\t\tcontext: {}\n\t\t});\n\n\t\tconst branch = [\n\t\t\tnode,\n\t\t\tawait this._load_node({\n\t\t\t\tstatus,\n\t\t\t\terror,\n\t\t\t\tmodule: await this.fallback[1],\n\t\t\t\tpage,\n\t\t\t\tcontext: node && node.loaded && node.loaded.context\n\t\t\t})\n\t\t];\n\n\t\treturn await this._get_navigation_result_from_branch({ page, branch });\n\t}\n}\n\n// @ts-ignore\n\n/** @param {{\n *   paths: {\n *     assets: string;\n *     base: string;\n *   },\n *   target: Node;\n *   session: any;\n *   host: string;\n *   route: boolean;\n *   spa: boolean;\n *   trailing_slash: import('types/internal').TrailingSlash;\n *   hydrate: {\n *     status: number;\n *     error: Error;\n *     nodes: Array<Promise<import('types/internal').CSRComponent>>;\n *     page: import('types/page').Page;\n *   };\n * }} opts */\nasync function start({ paths, target, session, host, route, spa, trailing_slash, hydrate }) {\n\tif (import.meta.env.DEV && !target) {\n\t\tthrow new Error('Missing target element. See https://kit.svelte.dev/docs#configuration-target');\n\t}\n\n\tconst router =\n\t\troute &&\n\t\tnew Router({\n\t\t\tbase: paths.base,\n\t\t\troutes,\n\t\t\ttrailing_slash\n\t\t});\n\n\tconst renderer = new Renderer({\n\t\tRoot,\n\t\tfallback,\n\t\ttarget,\n\t\tsession,\n\t\thost\n\t});\n\n\tinit(router);\n\tset_paths(paths);\n\n\tif (hydrate) await renderer.start(hydrate);\n\tif (route) router.init(renderer);\n\n\tif (spa) router.goto(location.href, { replaceState: true }, []);\n\n\tdispatchEvent(new CustomEvent('sveltekit:start'));\n}\n\nif (import.meta.env.VITE_SVELTEKIT_SERVICE_WORKER) {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.register(\n\t\t\t/** @type {string} */ (import.meta.env.VITE_SVELTEKIT_SERVICE_WORKER)\n\t\t);\n\t}\n}\n\nexport { start };\n","/** @param {HTMLDocument} doc */\nfunction get_base_uri(doc) {\n\tlet baseURI = doc.baseURI;\n\n\tif (!baseURI) {\n\t\tconst baseTags = doc.getElementsByTagName('base');\n\t\tbaseURI = baseTags.length ? baseTags[0].href : doc.URL;\n\t}\n\n\treturn baseURI;\n}\n\nexport { get_base_uri as g };\n"],"names":["ctx","ctx2","stores","page","components","props_0","props_1","props_2","notify","mounted","navigated","title","unsubscribe","subscribe","document","set","scriptRel","seen","__vitePreload","baseModule","deps","relList","createElement","supports","Promise","all","map","dep","isCss","endsWith","cssSelector","querySelector","link","rel","as","crossOrigin","href","head","appendChild","res","rej","addEventListener","then","c","routes","fallback","x","pageXOffset","y","pageYOffset","node","nodeName","toUpperCase","parentNode","[object Object]","base","trailing_slash","routes2","renderer","scroll_timer","router","this","enabled","history","scrollRestoration","setTimeout","new_state","state","sveltekit:scroll","scroll_state","replaceState","window","location","trigger_prefetch","event","a","find_anchor","target","hasAttribute","prefetch","URL","mousemove_timeout","button","which","metaKey","ctrlKey","shiftKey","altKey","defaultPrevented","svg","constructor","name","String","baseVal","hash","preventDefault","getAttribute","split","includes","url","owns","noscroll","pushState","_navigate","body","setAttribute","origin","pathname","startsWith","path","decodeURIComponent","slice","length","filter","pattern","test","query","URLSearchParams","search","id","chain","doc","baseURI","baseTags","getElementsByTagName","get_base_uri","info","parse","Error","load","scroll","hash2","has_trailing_slash","pop","update","focus","deep_linked","getElementById","getBoundingClientRect","top","scrollY","value","store","writable","ready","val","new_value","run","old_value","resource","opts","selector","i","charCodeAt","toString","script","_a","textContent","init2","resolve","Response","fetch","Root","session","host","Root2","fallback2","started","session_id","invalid","Set","invalidating","current","branch","cache","Map","loading","promise","page_store","navigating","$session","root","async","status","error","nodes","result","new_status","new_error","context","is_leaf","_load_node","module","push","loaded","__spreadValues","_get_navigation_result_from_branch","e","_load_error","redirect","_init","CustomEvent","from","to","no_cache","token","navigation_result","_get_navigation_result","clear","goto","reload","$set","props","leaf_node","disable","enable","add","style","remove","hydrate","route","j","next","forEach","loader","_load","filtered","Boolean","default","leaf","maxage","key","get","delete","timeout","uses","params","dependencies","defineProperty","enumerable","load_input","initial_fetch","call","warn","Math","floor","normalize","has","b","get_params","exec","changed","Object","keys","key2","context_changed","previous","some","param","error_loaded","node_loaded","paths","spa","Router","Renderer","start","init"],"mappings":"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"}