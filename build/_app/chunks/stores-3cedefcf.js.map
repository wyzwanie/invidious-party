{"version":3,"file":"stores-3cedefcf.js","sources":["../../../../build/runtime/app/stores.js"],"sourcesContent":["import { getContext } from 'svelte';\n\n// const ssr = (import.meta as any).env.SSR;\nconst ssr = typeof window === 'undefined'; // TODO why doesn't previous line work in build?\n\n// TODO remove this (for 1.0? after 1.0?)\nlet warned = false;\nfunction stores() {\n\tif (!warned) {\n\t\tconsole.error('stores() is deprecated; use getStores() instead');\n\t\twarned = true;\n\t}\n\treturn getStores();\n}\n\n/**\n * @type {import('$app/stores').getStores}\n */\nconst getStores = () => {\n\tconst stores = getContext('__svelte__');\n\n\treturn {\n\t\tpage: {\n\t\t\tsubscribe: stores.page.subscribe\n\t\t},\n\t\tnavigating: {\n\t\t\tsubscribe: stores.navigating.subscribe\n\t\t},\n\t\t// @ts-ignore - deprecated, not part of type definitions, but still callable\n\t\tget preloading() {\n\t\t\tconsole.error('stores.preloading is deprecated; use stores.navigating instead');\n\t\t\treturn {\n\t\t\t\tsubscribe: stores.navigating.subscribe\n\t\t\t};\n\t\t},\n\t\tsession: stores.session\n\t};\n};\n\n/** @type {typeof import('$app/stores').page} */\nconst page = {\n\t/** @param {(value: any) => void} fn */\n\tsubscribe(fn) {\n\t\tconst store = getStores().page;\n\t\treturn store.subscribe(fn);\n\t}\n};\n\n/** @type {typeof import('$app/stores').navigating} */\nconst navigating = {\n\t/** @param {(value: any) => void} fn */\n\tsubscribe(fn) {\n\t\tconst store = getStores().navigating;\n\t\treturn store.subscribe(fn);\n\t}\n};\n\n/** @param {string} verb */\nconst error = (verb) => {\n\tthrow new Error(\n\t\tssr\n\t\t\t? `Can only ${verb} session store in browser`\n\t\t\t: `Cannot ${verb} session store before subscribing`\n\t);\n};\n\n/** @type {typeof import('$app/stores').session} */\nconst session = {\n\tsubscribe(fn) {\n\t\tconst store = getStores().session;\n\n\t\tif (!ssr) {\n\t\t\tsession.set = store.set;\n\t\t\tsession.update = store.update;\n\t\t}\n\n\t\treturn store.subscribe(fn);\n\t},\n\tset: (value) => {\n\t\terror('set');\n\t},\n\tupdate: (updater) => {\n\t\terror('update');\n\t}\n};\n\nexport { getStores, navigating, page, session, stores };\n"],"names":["page","subscribe","fn","stores","getContext","navigating","error","session","getStores"],"mappings":"yCAkBA,MAsBMA,EAAO,CAEZC,UAAUC,GAxBO,YACXC,EAASC,EAAW,oBAEnB,CACNJ,KAAM,CACLC,UAAWE,EAAOH,KAAKC,WAExBI,WAAY,CACXJ,UAAWE,EAAOE,WAAWJ,2CAIrBK,MAAM,kEACP,CACNL,UAAWE,EAAOE,WAAWJ,YAG/BM,QAASJ,EAAOI,UAQFC,GAAYR,KACbC,UAAUC"}